<?xml version='1.0' encoding='utf-8'?>
<!--
   Copyright 2018 International Business Machines Corp.
   
   See the NOTICE file distributed with this work for additional information
   regarding copyright ownership. Licensed under the Apache License, 
   Version 2.0 (the "License"); you may not use this file except in compliance
   with the License. You may obtain a copy of the License at
   
     http://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.openliberty.tools</groupId>
        <artifactId>liberty-maven-app-parent</artifactId>
        <version>3.2.2</version>
    </parent>
    <groupId>net.wasdev.wlp.sample</groupId>
    <artifactId>sample-batch-tweetanalyzer</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <properties> 
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <warContext>/web</warContext>
        <tweets.analyzed.db.url>${project.build.directory}/liberty/wlp/usr/shared/resources/TweetAnalysisDB</tweets.analyzed.db.url>
        <jobrepository.db.url>${project.build.directory}/liberty/wlp/usr/shared/JobRepositoryDB</jobrepository.db.url>
        <liberty.version>20.0.0.8</liberty.version>
        <packaging.type>usr</packaging.type>
    </properties>
    <profiles>
        <profile>
            <id>runnable</id>
            <properties>
                <packaging.type>runnable</packaging.type>
            </properties>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-core</artifactId>
            <version>4.0.6</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.watson.developer_cloud</groupId>
            <artifactId>java-sdk</artifactId>
            <version>6.2.0</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-shared-data-to-liberty</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources</outputDirectory>
                            <overwrite>false</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/sample-data</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>unzip-pre-populated-db</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <unzip src="${project.build.directory}/liberty/wlp/usr/shared/resources/TweetAnalysisDB.zip" dest="${project.build.directory}/liberty/wlp/usr/shared/resources/" />
                                <delete file="${project.build.directory}/liberty/wlp/usr/shared/resources/TweetAnalysisDB.zip" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-derby</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>10.11.1.1</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources/derby</outputDirectory>
                                    <destFileName>derby.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>pom.xml</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <assemblyArtifact>
                        <groupId>io.openliberty</groupId>
                        <artifactId>openliberty-kernel</artifactId>
                        <version>${liberty.version}</version>
                        <type>zip</type>
                    </assemblyArtifact>
                    <include>${packaging.type}</include>
                    <skipTestServer>true</skipTestServer>
                    <bootstrapProperties>
                        <tweets.analyzed.db.url>${tweets.analyzed.db.url}</tweets.analyzed.db.url>
                        <jobrepository.db.url>${jobrepository.db.url}</jobrepository.db.url>
                        <appContext>${warContext}</appContext>
                        <default.http.port>${testServerHttpPort}</default.http.port>
                        <default.https.port>${testServerHttpsPort}</default.https.port>
                        <appLocation>${project.artifactId}.war</appLocation>
                    </bootstrapProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
